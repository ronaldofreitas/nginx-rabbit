
# ronaldo@ronaldo:~/nginx_docker/nginx$ docker run --name some-nginx -v /root/nginx/conf:/etc/nginx/conf.d --net=host some-content-nginx
# /usr/lib/nginx/modules/ngx_http_redis2_module.so

#load_module /usr/lib/nginx/modules/ngx_http_redis2_module.so;
#load_module /usr/lib/nginx/modules/ngx_http_geoip2_module.so;
#load_module /usr/lib/nginx/modules/ngx_nchan_module.so;
#load_module /usr/lib/nginx/modules/ngx_stream_js_module.so;
load_module /usr/lib/nginx/modules/ngx_http_js_module.so;

worker_processes 1;
# Note: for debugging, very useful
#error_log            /dev/stderr debug;
#error_log            /dev/stderr;
pid                  nginx.pid;
#pid logs/nginx.pid;
worker_rlimit_nofile 1024;
#daemon               off;

events {
    worker_connections 1024;
}

http {
        js_import http.js;
        js_set $rsummary http.summary;

    log_format main 'site="$server_name" server="$host" dest_port="$server_port" dest_ip="$server_addr" '
                   'src="$remote_addr" src_ip="$realip_remote_addr" user="$remote_user" '
                   'time_local="$time_local" protocol="$server_protocol" status="$status" '
                   'bytes_out="$body_bytes_sent" bytes_in="$upstream_response_length" '
                   'http_referer="$http_referer" http_user_agent="$http_user_agent" '
                   'nginx_version="$nginx_version" http_x_forwarded_for="$http_x_forwarded_for" '
                   'http_x_header="$http_x_header" uri_query="$query_string" uri_path="$uri" '
                   'http_method="$request_method" response_time="$upstream_response_time" '
                   'cookie="$http_cookie" request_time="$request_time" ';
    log_format compression '
[remote_addr] $remote_addr 
[remote_port] $remote_port
[request_method] $request_method
[date_local] $date_local  
[remote_user] $remote_user 
[time_local] $time_local 
[request] $request
[status] $status 
[body_bytes_sent] $body_bytes_sent 
[http_referer] $http_referer 
[http_user_agent] $http_user_agent 
[gzip_ratio] $gzip_ratio
[request_time] $request_time
[hostname] $hostname
[proxy_protocol_addr] $proxy_protocol_addr 
[proxy_protocol_port] $proxy_protocol_port
[request_length] $request_length
[server_addr] $server_addr
[limit_rate] $limit_rate

[upstream_addr] $upstream_addr
[upstream_status] $upstream_status
[upstream_response_time] $upstream_response_time
[upstream_connect_time] $upstream_connect_time
[upstream_header_time] $upstream_header_time

[connections_active] $connections_active

    ';
    
    
    #keyval_zone zone=foo:10m;

    upstream backend {
        #server backend1.example.com       weight=5;
        server 127.0.0.1:5000;
    }

    server {
        #listen 80;
        #server_name localhost;

        gzip on;
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;

        location / {
            #js_content stream.enviar
            mirror /mirror;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #js_filter  stream.header_inject;
            #js_content stream.enviar;
            
            #js_content http.enviar;
            #js_content http.set_keyval;
            #js_content http.version;
        }

        location = /mirror {
            internal;
            proxy_pass http://127.0.0.1:8001$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Summary-List $rsummary;
            proxy_set_header X-VALDEMAR 'site="$server_name" server="$host" dest_port="$server_port" dest_ip="$server_addr" src="$remote_addr" src_ip="$realip_remote_addr" user="$remote_user" time_local="$time_local" protocol="$server_protocol" status="$status" bytes_out="$body_bytes_sent" bytes_in="$upstream_response_length" http_referer="$http_referer" http_user_agent="$http_user_agent" nginx_version="$nginx_version" http_x_forwarded_for="$http_x_forwarded_for" http_x_header="$http_x_header" uri_query="$query_string" uri_path="$uri" http_method="$request_method" response_time="$upstream_response_time" cookie="$http_cookie" request_time="$request_time" ';

            #js_content http.set_keyval;
        }

        location /api {
            proxy_pass http://127.0.0.1:8001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /basic_status {
            stub_status;
        }
    }
}
